#!/bin/env bash


pgrep -x sxhkd > /dev/null || sxhkd &
wm="bspwm" ~/.config/polybar/launch.sh

bspc monitor "eDP-1" -s "HDMI-1"

bspc monitor "HDMI-1" -d 1 2 3 4 5
bspc monitor "eDP-1"  -d 6 7 8 9 0

bspc config normal_border_color "#3B4252"
bspc config active_border_color "#4C566A"
bspc config focused_border_color "#88C0D0"
bspc config presel_feedback_color "#8FBCBB"

bspc config border_width         2
bspc config window_gap          8

bspc config split_ratio          0.5
bspc config borderless_monocle   false
bspc config gapless_monocle      false
bspc config focus_follows_pointer true

# bspc rule -a Gimp-2.10 desktop='^8' state=floating follow=on
# bspc rule -a Chromium desktop='^2'
# bspc rule -a mplayer2 state=floating
# bspc rule -a Kupfer.py focus=on
# bspc rule -a Screenkey manage=off
bspc rule -a discord desktop=^6
bspc rule -a Steam desktop=^5
#bspc rule -a zoom desktop=^6

#### Transparency hack: works by hiding previous focused nodes
manage_node_transparency () {
  # Store last ids
  PREV_NODE_ID=
  PREV_DESK_ID=
  # On envery focus change
  bspc subscribe node_focus | while read -r _ _ desktop_id node_id; do
    # Set my custom _COMPTON_MONOCLE xprop to 1, meaning active
    xprop -id "$node_id" -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 1;
    # Check if previous desktop is the same of now (no need to hide when changing desktops)
    if [ "$PREV_DESK_ID" == "$desktop_id" ] && [ "$PREV_NODE_ID" != "$node_id" ]; then
      # Get the layout of the previous node to hide
      PREV_LAYOUT=$(bspc query -T -d "$desktop_id" | jq -r .layout);
      # Hide the previous node only if it was on a monocle desktop
      [ "$PREV_LAYOUT" == "monocle" ] && xprop -id "$PREV_NODE_ID" -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 0;
    fi
    # Update previous ids
    PREV_NODE_ID=$node_id
    PREV_DESK_ID=$desktop_id
  done

}

#### Manage Desktop Layout Change
manage_desktop_layout () {
  # Subscribe to layout change event
  bspc subscribe desktop_layout | while read -r _ _ desktop_id layout; do
    if [ "$layout" == "tiled" ]; then
      # If tiled set _COMPTON_MONOCLE to all window nodes
      bspc query -N -n .window -d "$desktop_id" | xargs -I % xprop -id % -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 1;
    else
      # Else, set 0 to all non focused window nodes
      bspc query -N -n .window.!focused -d "$desktop_id" | xargs -I % xprop -id % -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 0;
    fi
  done
}

manage_node_transparency &
manage_desktop_layout &
